今天内容
一、system v ipc
共享内存
1、获取键值ftok(3)
2、获取共享内存的id
shmget(2)
#include <sys/ipc.h>
#include <sys/shm.h>
int shmget(key_t key, size_t size, int shmflg);
功能：分配一块共享内存段
参数：
key：ftok(3)的返回值
size：指定了共享内存的长度
shmflg：
IPC_CREAT：如果共享内存段不存在，创建共享内存段
IPC_EXCL：
mode_flags:指定共享内存段的权限
返回值：
返回共享内存段的id
-1  失败   errno被设置

3、将共享内存映射到进程的虚拟地址空间
#include <sys/types.h>
#include <sys/shm.h>
void *shmat(int shmid, const void *shmaddr, int shmflg);
功能：连接共享内存到进程的虚拟地址空间
参数：
shmid：共享内存段的id
shmaddr：共享内存段在进程的虚拟地址空间的连接地址
            值为NULL 系统选择
shmflg：
SHM_RDONLY：共享内存段只读
0           可读可写
返回值：
(void *)-1    错误  errno被设置
返回连接地址


4、对内存的操作
5、解除共享内存的映射
int shmdt(const void *shmaddr);
功能：解除共享内存段的连接
参数：
shmaddr：指定了内存段的地址。shnat(2)的返回值
返回值：
0   成功
-1  错误   errno被设置

举例说明  创建自己的共享内存段   代码参见  segment.c

举例说明  使用共享内存段实现进程间的通讯  代码参见  
shm.h
shmA.c
shmB.c


二、网络基础
C/S    B/S
SERVER   服务器
什么是服务器？
硬件和软件的结合：
软件称为服务。软件向客户提供服务
硬件就是器。这个软件要在硬件上运行，两者的结合称为服务器。

行业标准   规则    协议
为了两台机器之间通讯，通讯协议    TCP/IP协议
这个协议不是一个协议，而是一组协议。 TCP/Ip协议簇

这些协议也是分层的。
4层或者5层，即，如下：
链路层、网络层、传输层、应用层
或者
物理层、链路层、网络层、传输层、应用层

OSI七层参考模型    仅仅是一个模型   只是一个想法而已

电气协议（网卡接口规格等）        是，物理层
网帧，格式--> 头部--数据--尾部    是，链路层（属于逻辑结构）

在定义头部和尾部部分的时候，有两种格式：
以太网帧格式         市面上比较流行的   97%
令牌环网帧格式       偶尔会有的

我们的课程一以太网为主。

IP数据报       网络层
TCP   包       传输层

应用程序需要监听一个端口号。等待数据的到来。
端口号是0～65535.       5000以下不建议使用，系统和国际组织已经规定。

如何察看自己的ip地址？  IP是逻辑地址
sudo ifconfig

6字节的目的地址和源地址
网卡的身份证--> MAC地址 ,是 物理地址
需要将IP地址和MAC地址做绑定。什么时候绑定的？

客户端向服务器端请求数据：
必须知道服务器的IP地址。
还需要知道服务程序监听的端口号。

三层交换：
HUB（集线器）   只是将电流物理的放大 然后分流。    物理层
交换机          交换的是网帧                       链路层
路由器          交换的是IP数据报文                 网络层

IP分类
一个IP中分为包含主机编号和网络号
主机编号全0和全1不能用。 全0代表网络号    全1代表广播地址

A 类  0  ～127 . 0～255 . 0～255 . 0～255（0+7位网络号+24位主机号）
B 类  128～191 . 0～255 . 0～255 . 0～255（10+14位网络号+16位主机号）
C 类  192～223 . 0～255 . 0～255 . 0～255（110+21位网络号+8位主机号）  

10.0.0.0
172.
192.         私有ip   这些ip不允许出现在公网
只允许出现在家庭、实验室、公司内部。

总结：
一、消息队列实现进程间通讯
二、使用共享内存实现进程间的通讯
三、网络的基础知识
TCP/IP   协议簇  分层
三层交换
IP地址的分类
端口号

如何去找出IP地址中的网络号和主机号？

